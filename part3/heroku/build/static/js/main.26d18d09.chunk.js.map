{"version":3,"sources":["Comm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newData","post","id","delete","put","Filter","props","useState","letters","setLetters","value","onChange","event","target","handleFilterBy","AddingPerson","name","setName","number","setNumber","e","onClick","handleAdd","sendingData","PeopleToDisplay","display","filterBy","toLowerCase","allPeople","filter","item","includes","map","handleDeletion","Message","style","info","App","error","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","success","nomsg","persons","setPersons","setFilterBy","msgText","setMsgText","useEffect","comm","x","filtered","length","res","setTimeout","catch","err","msg","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26d18d09.chunk.js","sourcesContent":["// import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\n\n// [_] We should have this separate package for communication\n// [_] Save changes to backend server [POST]\n// [_] Add deletion [DELETE]\n// ... [_] Add confirmation [window.confirm]\n// [_] Add modify [PUT]\n\nconst baseUrl = \"/api/persons\"\n\n// Added this `result` definition because they used it \n// to fix an Ajax problem.\nconst listRecords = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n// This may have been a problem. But regardless...\n\nconst createRecord = (newData) => {\n    const request = axios.post(baseUrl, newData)\n    return request.then(response => response.data)\n}\n\nconst deleteRecord = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst updateRecord = (id, newData) => {\n    const request = axios.put(`${baseUrl}/${id}`, newData)\n    return request.then(response => response.data)\n}\n\nexport default { listRecords, createRecord, deleteRecord, updateRecord }","import React, { useState, useEffect } from 'react'\nimport comm  from \"./Comm\"\n\nconst Filter = (props) => {\n  const [letters, setLetters] = useState(\"\")\n\n  const handleLetters = (event) => {\n      setLetters(event.target.value);\n      props.handleFilterBy(event.target.value)\n  }\n\n  return (<div>Filter shown with <input value={letters} onChange={handleLetters} /></div>)\n}\n\nconst AddingPerson = (props) => {\n  const [name, setName] = useState(\"\")\n  const [number, setNumber] = useState(\"\")\n\n  // This way, if one of the two fields is missing, the return value from `sendingData()` will be false. Then “hasSent” will be false. Then the fields will not be cleared.\n  const sendingData = () => {\n    if (name && number) {\n      const newData = {\"name\": name, \"number\": number};\n      props.handleAdd(newData);\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return <div>\n    name: <input value={name} onChange={(e)=>{setName(e.target.value)}} /><br />\n    number: <input value={number} onChange={(e)=>{setNumber(e.target.value)}} /><br />\n    <button onClick={()=> {\n      const hasSent = sendingData();\n      if (hasSent) {\n        setName(\"\");\n        setNumber(\"\")\n      }\n    }}>add</button>\n  </div>;\n}\n\nconst PeopleToDisplay = (props) => {\n\n  const letters = props.filterBy.toLowerCase()\n  // console.log(\"<PeopleToDisplay> letters\", letters)\n  // console.log(\"<PeopleToDisplay> props\", props)\n  let display;\n\n  // console.log(props.allPeople)\n  display = props.allPeople.filter(\n    (item)=>{\n     return item.name.toLowerCase().includes(letters)\n    }\n  );\n  // console.log(display)\n  \n\n  return <ul>\n      {display.map(\n        (item) => <li key={item.name+item.number}>{item.name} {item.number} <button onClick={()=>{\n          props.handleDeletion(item.id, item.name);\n      }}>delete</button></li>\n      )}\n    </ul>\n}\n\nconst Message = (props) => {\n  return <div style={props.info[1]}>{props.info[0]}</div>\n}\n\nconst App = () => {\n\n  const error = {\n    color: \"red\",\n    background: \"lightgrey\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\"\n  }\n\n  const success = {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\"\n  }\n\n  const nomsg = {\n    display: \"none\"\n  }\n\n  const [ persons, setPersons ] = useState([])\n  const [ filterBy, setFilterBy ] = useState(\"\")\n  const [ msgText, setMsgText ] = useState([\"\", nomsg])\n  // console.log(\"persons in <App>\", persons)\n  // console.log(\"filterBy in <App>\", filterBy)\n\n  useEffect(\n    ()=>{\n      comm.listRecords().then( (x)=> {\n        // console.log(x);\n        setPersons(x)\n      })\n    }\n    , []\n  )\n\n  const deleteById = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n    comm.deleteRecord(id).then(\n      (res) => {\n      setPersons(persons.filter( (item)=> {return item.id !== id }));\n      const msgText = `Record of ${name} is deleted.`\n      setMsgText([msgText, success]);\n    setTimeout(\n      () => { setMsgText(['', nomsg]) },\n      5000);\n    }).catch(\n      (e) => {\n        setPersons(persons.filter( (item)=> {return item.id !== id }));\n        const msgText = e.response.data.error\n    setMsgText([msgText, error]);\n    setTimeout(\n      () => { setMsgText(['', nomsg]) },\n      5000);\n     }\n    )\n  }\n  }\n\n  const addRecord = (newData) => {\n    const filtered = persons.filter( (item) => {return item.name === newData.name})\n\n    if (filtered.length === 0) {\n      comm.createRecord(newData).then(\n        (res) => {\n          setPersons([...persons, res]);\n          setMsgText([`Record of ${res.name} is added.`, success]);\n          setTimeout(() => {\n            setMsgText(['', nomsg])\n          }, 5000)\n        }\n      ).catch(\n        err => {\n          const msg = err.response.data.error\n          setMsgText([msg, error]);\n          setTimeout(() => {\n            setMsgText(['', nomsg])\n          }, 5000)\n        }\n      )\n    } else if (window.confirm(`${filtered[0].name} exists. Update?`)) {\n      comm.updateRecord(filtered[0].id, newData).then(\n        res => {\n          const filtered = persons.filter( (item)=> {\n            return item.id !== res.id \n          });\n          setPersons(\n            [...filtered, res]\n          );\n          setMsgText([`Record of ${res.name} is updated.`, success]);\n          setTimeout(() => {\n            setMsgText(['', nomsg])\n          }, 5000)\n        }\n      ).catch(\n        err => {\n          const msg = err.response.data.error\n          setMsgText([msg, error]);\n          setTimeout(() => {\n            setMsgText(['', nomsg])\n          }, 5000)\n        }\n      )\n    }\n  }\n\n  return (<div>\n    <h2>Phonebook</h2>\n    <Message info={msgText} />\n      <Filter handleFilterBy={setFilterBy} />\n    <h3>Add a new</h3>\n        <AddingPerson handleAdd={addRecord} />\n      <h3>Numbers</h3>\n      <PeopleToDisplay filterBy={filterBy} allPeople={persons} handleDeletion={deleteById} />\n  </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}